{% extends "base.html.jinja" %}

{% block title %}Fasta Upload{% endblock %}

{% block head %}
{{ super() }}
<style type="text/css">
    {
        % if earth is defined %
    }

    form button.button {
        background-color: #DD5B6C !important;
    }

    #content,
    html,
    body,
    #content *:not(.button),
    #footer,
    #footer * {
        background-color: #87D8C9 !important;
    }


        {
        % endif %
    }

    .container-fluid {
        height: 100%;
        min-height: 90vh;
    }

    div#drop-area:not(.button) {
        border: 2px dashed #ccc;
        border-radius: 20px;
        width: 100%;
        font-family: sans-serif;
        padding: 50px;
        margin-top: 2em;
        background-color: white !important;
    }

    #drop-area *:not(.button) {
        background-color: white !important;
    }

    form * {
        margin-left: auto;
        margin-right: auto;
    }

    form {
        margin: 100px auto;
        width: fit-content;
    }

    #drop-area.highlight {
        border-color: purple;
    }

    p {
        margin-top: 0;
    }


    #gallery {
        margin-top: 10px;
    }

    #gallery img {
        width: 150px;
        margin-bottom: 10px;
        margin-right: 10px;
        vertical-align: middle;
    }

    .button {
        display: inline-block;
        padding: 10px;
        background: #ccc;
        cursor: pointer;
        border-radius: 5px;
        border: 1px solid #ccc;
    }

    .button:hover {
        background: #ddd;
    }

    #fileElem {
        display: none;
    }

    i {
        font-size: xx-large;
    }
</style>
{% endblock %}
{% block content %}
<div class="container-fluid d-flex flex-column">
    <div class="my-auto">

        <form class="my-form text-center" id="file-upload-form">
            <span class="mb-2">Upload multiple files with the file dialog or by dragging and dropping images onto the
                dashed region
            </span>
            <div id="drop-area">
                <div class="d-flex flex-column">
                    <i class="bi bi-cloud-arrow-up"></i>
                    <input type="file" id="fileElem" multiple accept=".fasta">
                    <div class="row  my-2">


                        <div class="col-7">
                            <label class="button" for="fileElem">Select some files</label>
                            <span id="fileCt">No File Chosen</span>

                        </div>

                    </div>
                </div>
            </div>
            <div class="mt-3">
                <button type="submit" class="button">Upload Files</button>
                <button onclick="clearFiles()" class="button">Clear Files</button>
            </div>
        </form>

    </div>
</div>
<script>

    let dropArea = document.getElementById('drop-area');
    let selectedFiles = []; // To store selected files

    // Prevent default drag behaviors
    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, preventDefaults, false)
    })

    function preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
    }

    // Highlight drop area when dragging files over it
    ['dragenter', 'dragover'].forEach(eventName => {
        dropArea.addEventListener(eventName, highlight, false)
    });
    ['dragleave', 'drop'].forEach(eventName => {
        dropArea.addEventListener(eventName, unhighlight, false)
    });

    function highlight(e) {
        dropArea.classList.add('highlight');
    }

    function unhighlight(e) {
        dropArea.classList.remove('highlight');
    }

    // Handle file selection
    document.getElementById('fileElem').addEventListener('change', function (e) {
        selectedFiles = e.target.files;
        document.getElementById("fileCt").innerHTML = String(selectedFiles.length).concat(" ", "file(s) selected");

    });

    // Handle file drop
    dropArea.addEventListener('drop', function (e) {
        let dt = e.dataTransfer;
        selectedFiles.push(dt.files);
        document.getElementById("fileCt").innerHTML = String(selectedFiles.length).concat(" ", "file(s) selected");
    });

    // Upload files on form submission
    document.getElementById('file-upload-form').addEventListener('submit', function (e) {
        e.preventDefault(); // Prevent the default form submission
        Array.from(selectedFiles).forEach(uploadFile); // Upload selected files
    });

    function clearFiles() {
        document.getElementById("fileElem").value = null;

        document.getElementById("fileCt").innerHTML = "No file chosen";

    }

    function uploadFile(file) {
        let url = '/post-fasta';
        let formData = new FormData();

        formData.append('file', file);

        fetch(url, {
            method: 'POST',
            body: formData
        })
            .then(() => {
                console.log("uploaded");
                {% if earth is defined %}
                window.location.href = "/earth-report"
                {% else %}
                window.location.href = "/mission-length"
                {% endif %}

            })
            .catch(() => { console.log("it broke"); });
    }
</script>
{% endblock %}